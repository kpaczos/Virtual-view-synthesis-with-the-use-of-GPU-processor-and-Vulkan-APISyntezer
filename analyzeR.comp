#version 450
//#extension SPV_KHR_16bit_storage : enable
#extension GL_EXT_shader_16bit_storage : enable
#extension GL_AMD_gpu_shader_int16 : enable
#extension GL_EXT_shader_explicit_arithmetic_types : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int16 : enable



layout(binding = 0) buffer SrcDepth
{
   uint32_t Depth[ ];
} ;


layout(binding = 1) buffer DstIndexR
{
  int32_t InPntR[ ];
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (constant_id = 0) const uint BUFFER_ELEMENTS = 1000;

void main() 
{
  const     uint SizeX  = gl_NumWorkGroups     .x;
  const     uint SizeY  = gl_NumWorkGroups     .y;
            uint CoordX = gl_GlobalInvocationID.x;
  const     uint CoordY = gl_GlobalInvocationID.y;
 
  uint Offset = CoordY * SizeX + CoordX;



   uint pp = SizeX *(CoordX -1);

    if(Depth[pp] == 0 && pp == (SizeX -1)){
    InPntR[pp] = -1;
    }

  for (int32_t w = 1918; w >=0; w--, pp--)
    {
		if(w==1918 && Depth[pp] == 0){
		InPntR[pp] = -1;
		}
        if(  Depth[pp] == 0){

         InPntR[pp] = InPntR[pp +1] + 1; 
    }

}


}
  
  
  
  
  
  
 